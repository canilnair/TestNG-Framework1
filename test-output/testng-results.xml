<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="7" passed="3">
  <reporter-output>
    <line>
      <![CDATA[On Start Listner: Test Group Name = Unit Test
]]>
    </line>
    <line>
      <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method testMethod1 has FAILED]]>
    </line>
    <line>
      <![CDATA[On Test Start Listner: Begining Test name : testMethod2 started execution]]>
    </line>
    <line>
      <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method testMethod2 has FAILED]]>
    </line>
    <line>
      <![CDATA[On Test Start Listner: Begining Test name : testMethod3 started execution]]>
    </line>
    <line>
      <![CDATA[On Test Success Listner: Test Name : testMethod3 Passed successfully]]>
    </line>
    <line>
      <![CDATA[On Test Start Listner: Begining Test name : testmethod4 started execution]]>
    </line>
    <line>
      <![CDATA[Running Test -> testMethod4 -> Soft Assert 1]]>
    </line>
    <line>
      <![CDATA[Running Test -> testMethod4 -> Soft Assert 2]]>
    </line>
    <line>
      <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method testmethod4 has FAILED]]>
    </line>
    <line>
      <![CDATA[On Test Start Listner: Begining Test name : testmethod5 started execution]]>
    </line>
    <line>
      <![CDATA[On Test Success Listner: Test Name : testmethod5 Passed successfully]]>
    </line>
    <line>
      <![CDATA[On Start Listner: Test Group Name = Unit Test
]]>
    </line>
    <line>
      <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method testMethod1 has FAILED]]>
    </line>
    <line>
      <![CDATA[
On Finish Listner: Test Group Name = Unit Test Finished Execution
]]>
    </line>
    <line>
      <![CDATA[Passed Tests: 2]]>
    </line>
    <line>
      <![CDATA[Failed Tests:3]]>
    </line>
    <line>
      <![CDATA[Skipped Tests: 0
]]>
    </line>
    <line>
      <![CDATA[On Start Listner: Test Group Name = Selenium Test 1
]]>
    </line>
    <line>
      <![CDATA[Before Method]]>
    </line>
    <line>
      <![CDATA[On Test Start Listner: Begining Test name : selenium_testmethod1 started execution]]>
    </line>
    <line>
      <![CDATA[Value taken from screen is: Email is already taken]]>
    </line>
    <line>
      <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method selenium_testmethod1 has FAILED]]>
    </line>
    <line>
      <![CDATA[After Method]]>
    </line>
    <line>
      <![CDATA[On Start Listner: Test Group Name = Unit Test
]]>
    </line>
    <line>
      <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method testMethod1 has FAILED]]>
    </line>
    <line>
      <![CDATA[
On Finish Listner: Test Group Name = Unit Test Finished Execution
]]>
    </line>
    <line>
      <![CDATA[Passed Tests: 2]]>
    </line>
    <line>
      <![CDATA[Failed Tests:3]]>
    </line>
    <line>
      <![CDATA[Skipped Tests: 0
]]>
    </line>
    <line>
      <![CDATA[On Start Listner: Test Group Name = Selenium Test 1
]]>
    </line>
    <line>
      <![CDATA[
On Finish Listner: Test Group Name = Selenium Test 1 Finished Execution
]]>
    </line>
    <line>
      <![CDATA[Passed Tests: 0]]>
    </line>
    <line>
      <![CDATA[Failed Tests:1]]>
    </line>
    <line>
      <![CDATA[Skipped Tests: 0
]]>
    </line>
    <line>
      <![CDATA[On Start Listner: Test Group Name = Selenium Test 2
]]>
    </line>
    <line>
      <![CDATA[Before Method]]>
    </line>
    <line>
      <![CDATA[On Test Start Listner: Begining Test name : selenium_testmethod2 started execution]]>
    </line>
    <line>
      <![CDATA[Value taken from screen is: Email is already taken]]>
    </line>
    <line>
      <![CDATA[On Test Success Listner: Test Name : selenium_testmethod2 Passed successfully]]>
    </line>
    <line>
      <![CDATA[After Method]]>
    </line>
  </reporter-output>
  <suite name="Anil Unit and Selenium Test Suite" duration-ms="24794" started-at="2017-08-23T04:47:54Z" finished-at="2017-08-23T04:48:19Z">
    <groups>
    </groups>
    <test name="Unit Test" duration-ms="32" started-at="2017-08-23T04:47:54Z" finished-at="2017-08-23T04:47:54Z">
      <class name="testclasses.SampleTest">
        <test-method status="FAIL" signature="testMethod1(java.lang.String, java.lang.String)[pri:0, instance:testclasses.SampleTest@4dfa3a9d]" name="testMethod1" duration-ms="0" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Cannot inject @Test annotated Method [testMethod1] with [class java.lang.String, class java.lang.String].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [testMethod1] with [class java.lang.String, class java.lang.String].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
	at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:244)
	at org.testng.internal.Parameters.createParameters(Parameters.java:172)
	at org.testng.internal.Parameters.createParameters(Parameters.java:458)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:569)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1308)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1036)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1126)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method status="FAIL" signature="testMethod2()[pri:0, instance:testclasses.SampleTest@4dfa3a9d]" name="testMethod2" duration-ms="4" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	testMethod2 - Values do not match expected [Hello World] but found [Anil.TestAutomationFramework.SomeClassToTest@14342062]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	testMethod2 - Values do not match expected [Hello World] but found [Anil.TestAutomationFramework.SomeClassToTest@14342062]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at testclasses.SampleTest.testMethod2(SampleTest.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[On Test Start Listner: Begining Test name : testMethod2 started execution]]>
            </line>
            <line>
              <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method testMethod2 has FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method status="PASS" signature="testMethod3()[pri:0, instance:testclasses.SampleTest@4dfa3a9d]" name="testMethod3" duration-ms="1" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <reporter-output>
            <line>
              <![CDATA[On Test Start Listner: Begining Test name : testMethod3 started execution]]>
            </line>
            <line>
              <![CDATA[On Test Success Listner: Test Name : testMethod3 Passed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method status="FAIL" signature="testmethod4()[pri:0, instance:testclasses.SampleTest@4dfa3a9d]" name="testmethod4" duration-ms="1" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	testMethod2 - Values do not match expected [Hello World] but found [Anil.TestAutomationFramework.SomeClassToTest@14342062],
	 expected [3] but found [4],
	expected [10] but found [20]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	testMethod2 - Values do not match expected [Hello World] but found [Anil.TestAutomationFramework.SomeClassToTest@14342062],
	 expected [3] but found [4],
	expected [10] but found [20]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at testclasses.SampleTest.testmethod4(SampleTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[On Test Start Listner: Begining Test name : testmethod4 started execution]]>
            </line>
            <line>
              <![CDATA[Running Test -> testMethod4 -> Soft Assert 1]]>
            </line>
            <line>
              <![CDATA[Running Test -> testMethod4 -> Soft Assert 2]]>
            </line>
            <line>
              <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method testmethod4 has FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- testmethod4 -->
        <test-method status="PASS" signature="testmethod5()[pri:0, instance:testclasses.SampleTest@4dfa3a9d]" name="testmethod5" duration-ms="0" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <reporter-output>
            <line>
              <![CDATA[On Test Start Listner: Begining Test name : testmethod5 started execution]]>
            </line>
            <line>
              <![CDATA[On Test Success Listner: Test Name : testmethod5 Passed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- testmethod5 -->
      </class> <!-- testclasses.SampleTest -->
    </test> <!-- Unit Test -->
    <test name="Selenium Test 1" duration-ms="12793" started-at="2017-08-23T04:47:54Z" finished-at="2017-08-23T04:48:07Z">
      <class name="testclasses.SeleniumTest1">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testclasses.SeleniumTest1@192b07fd]" name="beforeTest" is-config="true" duration-ms="0" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testclasses.SeleniumTest1@192b07fd]" name="beforeClass" is-config="true" duration-ms="1" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testclasses.SeleniumTest1@192b07fd]" name="beforeMethod" is-config="true" duration-ms="8967" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:48:03Z">
          <reporter-output>
            <line>
              <![CDATA[Before Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="selenium_testmethod1()[pri:0, instance:testclasses.SeleniumTest1@192b07fd]" name="selenium_testmethod1" duration-ms="2307" started-at="2017-08-22T23:48:03Z" finished-at="2017-08-22T23:48:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at testclasses.SeleniumTest1.selenium_testmethod1(SeleniumTest1.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[On Test Start Listner: Begining Test name : selenium_testmethod1 started execution]]>
            </line>
            <line>
              <![CDATA[Value taken from screen is: Email is already taken]]>
            </line>
            <line>
              <![CDATA[On Test Fail Listner -> I Can Take Screen Shots & Test Method selenium_testmethod1 has FAILED]]>
            </line>
          </reporter-output>
        </test-method> <!-- selenium_testmethod1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.SeleniumTest1@192b07fd]" name="afterMethod" is-config="true" duration-ms="1514" started-at="2017-08-22T23:48:05Z" finished-at="2017-08-22T23:48:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selenium_testmethod1 status=FAILURE method=SeleniumTest1.selenium_testmethod1()[pri:0, instance:testclasses.SeleniumTest1@192b07fd] output=On Test Start Listner: Begining Test name : selenium_testmethod1 started execution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[After Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testclasses.SeleniumTest1@192b07fd]" name="afterClass" is-config="true" duration-ms="1" started-at="2017-08-22T23:48:07Z" finished-at="2017-08-22T23:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testclasses.SeleniumTest1@192b07fd]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-08-22T23:48:07Z" finished-at="2017-08-22T23:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testclasses.SeleniumTest1 -->
    </test> <!-- Selenium Test 1 -->
    <test name="Selenium Test 2" duration-ms="11920" started-at="2017-08-23T04:48:07Z" finished-at="2017-08-23T04:48:19Z">
      <class name="testclasses.SeleniumTest2">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="beforeSuite" is-config="true" duration-ms="6" started-at="2017-08-22T23:47:54Z" finished-at="2017-08-22T23:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="beforeTest" is-config="true" duration-ms="0" started-at="2017-08-22T23:48:07Z" finished-at="2017-08-22T23:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="beforeClass" is-config="true" duration-ms="0" started-at="2017-08-22T23:48:07Z" finished-at="2017-08-22T23:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="beforeMethod" is-config="true" duration-ms="8447" started-at="2017-08-22T23:48:07Z" finished-at="2017-08-22T23:48:15Z">
          <reporter-output>
            <line>
              <![CDATA[Before Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selenium_testmethod2()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="selenium_testmethod2" duration-ms="2233" started-at="2017-08-22T23:48:15Z" finished-at="2017-08-22T23:48:17Z">
          <reporter-output>
            <line>
              <![CDATA[On Test Start Listner: Begining Test name : selenium_testmethod2 started execution]]>
            </line>
            <line>
              <![CDATA[Value taken from screen is: Email is already taken]]>
            </line>
            <line>
              <![CDATA[On Test Success Listner: Test Name : selenium_testmethod2 Passed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- selenium_testmethod2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="afterMethod" is-config="true" duration-ms="1237" started-at="2017-08-22T23:48:17Z" finished-at="2017-08-22T23:48:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selenium_testmethod2 status=SUCCESS method=SeleniumTest2.selenium_testmethod2()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338] output=On Test Start Listner: Begining Test name : selenium_testmethod2 started execution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[After Method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="afterClass" is-config="true" duration-ms="0" started-at="2017-08-22T23:48:19Z" finished-at="2017-08-22T23:48:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-08-22T23:48:19Z" finished-at="2017-08-22T23:48:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testclasses.SeleniumTest2@7e0b0338]" name="afterSuite" is-config="true" duration-ms="0" started-at="2017-08-22T23:48:19Z" finished-at="2017-08-22T23:48:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testclasses.SeleniumTest2 -->
    </test> <!-- Selenium Test 2 -->
  </suite> <!-- Anil Unit and Selenium Test Suite -->
</testng-results>
